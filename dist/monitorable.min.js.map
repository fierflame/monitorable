{"version":3,"file":"monitorable.min.js","sources":["../src/utils.ts","../src/state.ts","../src/encase.ts","../src/executable.ts","../src/value.ts","../src/exec.ts"],"sourcesContent":["\nlet printErrorLog: undefined | ((info: any) => void);\n/** 设置或移除错误打印函数 */\nexport function printError(fn?: (info: any) => void): void;\n/** 打印错误 */\nexport function printError(info: any, print: true): void;\n/** 打印错误 */\nexport function printError(info: any): void;\nexport function printError(\n\tinfo?: string | Error | ((info: any) => void),\n\tprint = false\n) {\n\tif (!print && (typeof info === 'function' || info === undefined)) {\n\t\tprintErrorLog = info;\n\t\treturn;\n\t}\n\tif (typeof printErrorLog === 'function') {\n\t\tprintErrorLog(info);\n\t\treturn;\n\t}\n\tconsole.error(info);\n}\n\n/**\n * 判断对象是否可被代理\n */\nexport function encashable(v: any): v is object | Function {\n\treturn Boolean(v && ['object', 'function'].includes(typeof v));\n}\n\n\n/** 回调函数安全化处理 */\nexport function safeify<T extends any[]>(\n\tfn: (...p: T) => void\n): (...p: T) => void {\n\treturn (...p) => {\n\t\ttry {\n\t\t\tfn(...p);\n\t\t} catch(e) {\n\t\t\tprintError(e, true);\n\t\t}\n\t};\n}\nexport function getIndexes(\n\ttarget: any,\n\tprop: string | number | symbol | boolean,\n): [object | Function, string | boolean | symbol] | undefined {\n\tif (!target) { return undefined; }\n\tif (typeof target !== 'function' && typeof target !== 'object') {\n\t\treturn undefined;\n\t}\n\tif (typeof prop === 'number') { return [target, String(prop)]; }\n\tif (typeof prop === 'symbol') { return [target, prop]; }\n\tif (typeof prop === 'string') { return [target, prop]; }\n\tif (typeof prop === 'boolean') { return [target, prop]; }\n\treturn undefined;\n}\nexport function getMapValue<K, V>(\n\tmap: Map<K, V>,\n\tkey: K,\n\tdef: () => V,\n): V;\nexport function getMapValue<K extends object, V>(\n\tmap: WeakMap<K, V>,\n\tkey: K,\n\tdef: () => V,\n): V;\nexport function getMapValue<K, V>(\n\tmap: WeakMap<K & object, V> | Map<K, V>,\n\tkey: K,\n\tdef: () => V,\n): V {\n\tif (map.has(key as any)) {\n\t\treturn map.get(key as any)!;\n\t}\n\tconst value = def();\n\tmap.set(key as any, value);\n\treturn value;\n}\n","import { safeify, getMapValue, getIndexes } from './utils';\n\nexport type ReadMap =  Map<\n\tobject | Function,\n\tSet<string | boolean | symbol>\n>;\n\n/** 已被读取的 */\nlet read: ReadMap | undefined;\n\n/**\n * 标记已读状态\n * @param obj  要标记的对象\n * @param prop 要标记的属性\n */\nexport function markRead(\n\ttarget: object | Function,\n\tprop: string | number | boolean | symbol,\n) {\n\tif (!read) { return; }\n\tconst indexes = getIndexes(target, prop);\n\tif (!indexes) { return; }\n\t[target, prop] = indexes;\n\tgetMapValue(read, target, () => new Set()).add(prop);\n}\nexport interface ObserveOptions {\n\tpostpone?: boolean | 'priority';\n}\n/**\n * 监听函数的执行，并将执行过程中读取的对象值设置到 map 中\n * @param fn 要执行的含糊\n * @param map 用于存储被读取对象的 map\n */\nexport function observe<T>(\n\tfn: () => T,\n\tmap: ReadMap,\n\toptions?: ObserveOptions,\n): T {\n\tconst oldRead = read;\n\tread = map;\n\ttry {\n\t\tif (!options?.postpone) { return fn(); }\n\t\treturn postpone(fn, options.postpone === 'priority');\n\t} finally {\n\t\tread = oldRead;\n\t}\n}\n\n\nconst watchList = new WeakMap<\n\tobject | Function,\n\tMap<string | boolean | symbol, Set<() => void>>\n>();\n\nfunction execWatch(\n\ttarget: object | Function,\n\tprop: string | boolean | symbol,\n) {\n\tconst watch = watchList.get(target)?.get(prop);\n\tif (!watch) { return; }\n\t[...watch].forEach(w => w());\n}\n\nlet waitList: ReadMap | undefined;\n\nfunction run(list: ReadMap) {\n\tfor (const [target, set] of list.entries()) {\n\t\tfor (const prop of set) {\n\t\t\texecWatch(target, prop);\n\t\t}\n\t}\n}\nexport function postpone<T>(f: () => T, priority?: boolean): T {\n\tconst list = !priority && waitList || new Map();\n\tconst old = waitList;\n\twaitList = list;\n\ttry {\n\t\treturn f();\n\t} finally {\n\t\twaitList = old;\n\t\tif (list !== waitList) { run(list); }\n\t}\n}\n\nfunction wait(\n\ttarget: object | Function,\n\tprop: string | boolean | symbol,\n) {\n\tif (!waitList) { return false; }\n\tgetMapValue(waitList, target, () => new Set()).add(prop);\n\treturn true;\n}\n\n/**\n * 标记属性的修改，同时触发监听函数\n * @param target 要标记的对象\n * @param prop   要标记的属性 特别的，false 表示原型，true 表示成员\n */\nexport function markChange(\n\ttarget: object | Function,\n\tprop: string | number | boolean | symbol,\n) {\n\n\tconst indexes = getIndexes(target, prop);\n\tif (!indexes) { return; }\n\t[target, prop] = indexes;\n\tif (wait(target, prop)) { return; }\n\texecWatch(target, prop);\n}\n\n/**\n * 观察对象属性的变化\n * @param target 要观察的对象\n * @param prop   要观察的属性名 特别的，false 表示原型，true 表示成员\n * @param fn     属性改变后触发的函数\n */\nexport function watchProp(\n\ttarget: object | Function,\n\tprop: string | number | boolean | symbol,\n\tcb: () => void,\n): () => void {\n\tif (typeof cb !== 'function') { return  () => {}; }\n\tconst indexes = getIndexes(target, prop);\n\tif (!indexes) { return () => {}; }\n\t[target, prop] = indexes;\n\n\tconst key = prop;\n\tlet map = watchList.get(target);\n\tif (!map) {\n\t\tmap = new Map();\n\t\twatchList.set(target, map);\n\t}\n\tconst list = getMapValue(map, key, () => new Set());\n\tcb = safeify(cb);\n\tlist.add(cb);\n\tlet removed = false;\n\treturn () => {\n\t\tif (removed) { return; }\n\t\tremoved = true;\n\n\t\t// 从当前列表中移除\n\t\tlist.delete(cb);\n\n\t\t// 从属性关联中删除\n\t\tif (list.size) { return; }\n\t\tif (!map) { return; }\n\t\tmap.delete(key);\n\n\t\t// 映射列表中删除\n\t\tif (map.size) { return; }\n\t\twatchList.delete(target);\n\t};\n\n}\n","import { markChange, markRead } from './state';\n\n/**\n * 判断对象是否可被代理\n */\nfunction encashable(v: any): v is object | Function {\n\treturn Boolean(v && ['object', 'function'].includes(typeof v));\n}\n\nlet getValue: any;\n/**\n * 获取被代理对象\n * @param obj  要被代理的对象\n * @param nest 递归代理的层数\n */\nexport function encase<T>(value: T, nest: number | boolean = 0): T {\n\tif (!encashable(value)) { return value; }\n\tconst original = recover(value);\n\tconst nestLayer: number = nest === true ? Infinity : nest || 0;\n\tconst proxy = new Proxy(original, {\n\t\tset(target, prop, value, receiver) {\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.set(target, prop, value, receiver);\n\t\t\t}\n\t\t\tconst has = Reflect.has(target, prop);\n\t\t\tconst modified =\n\t\t\t\tReflect.set(target, prop, value, encase(receiver));\n\t\t\tif (!modified) { return modified; }\n\t\t\tif (has !== Reflect.has(target, prop)) {\n\t\t\t\tmarkChange(target, true);\n\t\t\t}\n\t\t\treturn modified;\n\t\t},\n\t\tget(target, prop, receiver) {\n\t\t\tif (getValue === proxy) {\n\t\t\t\tif (prop === '__monitorable__recover__') {\n\t\t\t\t\tgetValue = original;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t\t}\n\t\t\tmarkRead(target, prop);\n\t\t\tconst value = Reflect.get(target, prop, encase(receiver));\n\t\t\tif (nestLayer > 0) { return encase(value, nestLayer - 1); }\n\t\t\treturn value;\n\t\t},\n\t\tsetPrototypeOf(target, proto) {\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.setPrototypeOf(target, proto);\n\t\t\t}\n\t\t\tconst oldProto = Reflect.getPrototypeOf(target);\n\t\t\tconst modified = Reflect.setPrototypeOf(target, proto);\n\t\t\tif (modified && oldProto !== proto) {\n\t\t\t\tmarkChange(target, false);\n\t\t\t}\n\t\t\treturn modified;\n\t\t},\n\t\tgetPrototypeOf(target) {\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.getPrototypeOf(target);\n\t\t\t}\n\t\t\tmarkRead(target, false);\n\t\t\tconst value: any = Reflect.getPrototypeOf(target);\n\t\t\tif (nestLayer > 0) {\n\t\t\t\treturn encase(value, nestLayer - 1);\n\t\t\t}\n\t\t\treturn value;\n\t\t},\n\t\tdefineProperty(target, prop, attr) {\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.defineProperty(target, prop, attr);\n\t\t\t}\n\t\t\tlet changed = true;\n\t\t\tif ('value' in attr) {\n\t\t\t\tconst desc =\n\t\t\t\t\tReflect.getOwnPropertyDescriptor(target, prop);\n\t\t\t\tif (\n\t\t\t\t\tdesc && 'value' in desc\n\t\t\t\t\t&& recover(attr.value) === recover(desc.value)) {\n\t\t\t\t\tchanged = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst modified = Reflect.defineProperty(target, prop, attr);\n\t\t\tif (changed && modified) {\n\t\t\t\tmarkChange(target, prop);\n\t\t\t}\n\t\t\treturn modified;\n\t\t},\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.getOwnPropertyDescriptor(target, prop);\n\t\t\t}\n\t\t\tmarkRead(target, prop);\n\t\t\treturn Reflect.getOwnPropertyDescriptor(target, prop);\n\t\t},\n\t\tdeleteProperty(target, prop) {\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.deleteProperty(target, prop);\n\t\t\t}\n\t\t\tconst has = Reflect.has(target, prop);\n\t\t\tconst deleted = Reflect.deleteProperty(target, prop);\n\t\t\tif (has && !Reflect.has(target, prop)) {\n\t\t\t\tmarkChange(target, prop);\n\t\t\t\tmarkChange(target, true);\n\t\t\t}\n\t\t\treturn deleted;\n\t\t},\n\t\townKeys(target) {\n\t\t\tif (nest === false) { return Reflect.ownKeys(target); }\n\t\t\tmarkRead(target, true);\n\t\t\treturn Reflect.ownKeys(target);\n\t\t},\n\t\thas(target, prop) {\n\t\t\tif (nest === false) { return Reflect.has(target, prop); }\n\t\t\tmarkRead(target, true);\n\t\t\treturn Reflect.has(target, prop);\n\t\t},\n\t});\n\treturn proxy;\n}\n/** 获取被代理的原始值 */\nexport function recover<T>(v: T): T {\n\tif (!v) { return v; }\n\tif (!encashable(v)) { return v; }\n\tlet value = v;\n\ttry {\n\t\tgetValue = v;\n\t\tvalue = (v as any).__monitorable__recover__;\n\t} catch {}\n\tvalue = getValue;\n\tgetValue = false;\n\tif (!value) { return v; }\n\tif (typeof value === 'object') { return value; }\n\tif (typeof value === 'function') { return value; }\n\treturn v;\n}\nexport function equal(a: any, b: any): boolean {\n\treturn recover(a) === recover(b);\n}","import { safeify } from './utils';\nimport { observe, watchProp, ReadMap } from './state';\nimport { recover } from './encase';\n\nexport interface Executable<T> {\n\t(): T;\n\tstop(): void;\n}\nexport interface ExecutableOptions {\n\tpostpone?: boolean | 'priority';\n}\n/**\n * 创建可监听执行函数\n * @param fn 要监听执行的函数\n * @param cb 当监听的值发生可能改变时触发的回调函数，单如果没有被执行的函数或抛出错误，将会在每次 fn 被执行后直接执行\n */\nexport function createExecutable<T>(\n\tfn: () => T,\n\tcb: (changed: boolean) => void,\n\toptions?: ExecutableOptions,\n): Executable<T> {\n\tcb = safeify(cb);\n\tlet cancelList: (() => void)[] | undefined;\n\t/** 取消监听 */\n\tfunction cancel() {\n\t\tif (!cancelList) { return false; }\n\t\tconst list = cancelList;\n\t\tcancelList = undefined;\n\t\tlist.forEach(f => f());\n\t\treturn true;\n\t}\n\tfunction trigger() {\n\t\tif (!cancel()) { return; }\n\t\tcb(true);\n\t};\n\tfunction exec() {\n\t\tcancel();\n\t\tconst thisRead: ReadMap = new Map();\n\t\ttry {\n\t\t\treturn observe(fn, thisRead, options);\n\t\t} catch(e) {\n\t\t\tthisRead.clear();\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tif (thisRead.size) {\n\t\t\t\tcancelList = [];\n\t\t\t\tfor ( let [obj, props] of thisRead) {\n\t\t\t\t\tfor (const p of props) {\n\t\t\t\t\t\tcancelList.push(watchProp(recover(obj), p, trigger));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcb(false);\n\t\t\t}\n\t\t}\n\t}\n\texec.stop = () => {\n\t\tif (!cancel()) { return; }\n\t\tcb(false);\n\t};\n\treturn exec;\n}\n","import { safeify } from './utils';\nimport { markRead, markChange } from './state';\nimport { recover, encase } from './encase';\nimport { createExecutable } from './executable';\n\n/** 取消监听的方法 */\nexport interface CancelWatch {\n\t(): void;\n}\n/** 可监听值 */\nexport interface Value<T> {\n\t(): T;\n\t(v: T, mark?: boolean): T;\n\tvalue: T;\n\twatch(cb: WatchCallback<T, this>): CancelWatch;\n\tstop(): void;\n}\n/** 监听函数 */\nexport interface WatchCallback<T, V extends Value<T> = Value<T>> {\n\t(v: V, stopped: boolean): void;\n}\nconst values = new WeakSet<Value<any>>();\nexport function isValue(x: any): x is Value<any> {\n\treturn values.has(x);\n}\n/** 触发监听 */\ninterface Trigger {\n\t(): void;\n\t/** 是否存在监听函数 */\n\thas(): boolean;\n\t/** 停止监听 */\n\tstop(): void;\n}\nexport interface Options {\n\tproxy?: boolean;\n}\n\n\nfunction createValue<T, V extends Value<T> = Value<T>>(\n\trecover: () => T,\n\tsetValue?: (value: T, markChange: () => void) => void,\n\tstop: () => void = () => {},\n\tchange: () => void = () => {},\n): {value: V, trigger: Trigger} {\n\tfunction set(v: T, marked = false) {\n\t\tif (!setValue) { return; }\n\t\ttry {\n\t\t\tsetValue(v, () => { marked = true; });\n\t\t} finally {\n\t\t\tif (marked) {\n\t\t\t\ttrigger();\n\t\t\t}\n\t\t}\n\t}\n\tfunction get() {\n\t\tmarkRead(value, 'value');\n\t\treturn recover();\n\t}\n\tconst value: V = ((...v: [T] | [T, boolean] | []): T => {\n\t\tif (v.length) {\n\t\t\tset(v[0], v[1]);\n\t\t\treturn v[0];\n\t\t}\n\t\treturn get();\n\t}) as V;\n\tReflect.defineProperty(value, 'value', {\n\t\tget,\n\t\tset,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n\n\tfunction watch(cb: WatchCallback<T, V>): () => void {\n\t\tif (!callbacks) { return () => {}; }\n\t\tcb = safeify(cb);\n\t\tcallbacks.push(cb);\n\t\tchange();\n\t\tlet cancelled = false;\n\t\treturn () => {\n\t\t\tif (cancelled) { return; }\n\t\t\tcancelled = true;\n\t\t\tif (!callbacks) { return; }\n\t\t\tconst index = callbacks.findIndex(a => a === cb);\n\t\t\tif (index < 0) { return; }\n\t\t\tcallbacks.splice(index, 1);\n\t\t\tchange();\n\t\t};\n\t}\n\tlet callbacks: WatchCallback<T, V>[] | undefined = [];\n\tReflect.defineProperty(value, 'watch', {\n\t\tget() { return watch; },\n\t\tset() {},\n\t\tconfigurable: true,\n\t});\n\tconst trigger = (() => {\n\t\tif (!callbacks) { return; }\n\t\tmarkChange(value, 'value');\n\t\tfor (const cb of [...callbacks]) {\n\t\t\tcb(value, false);\n\t\t}\n\t}) as Trigger;\n\ttrigger.has = () => Boolean(callbacks?.length);\n\ttrigger.stop = () => {\n\t\tif (!callbacks) { return; }\n\t\tconst list = callbacks;\n\t\tcallbacks = undefined;\n\t\tfor (const cb of [...list]) {\n\t\t\tcb(value, true);\n\t\t}\n\t};\n\tvalues.add(value);\n\tlet stopped = false;\n\tvalue.stop = () => {\n\t\tif (stopped) { return; }\n\t\tstopped = true;\n\t\tstop();\n\t\ttrigger.stop();\n\n\t};\n\treturn {value, trigger};\n}\n/**\n * 创建引用值\n * @param value 初始值\n * @param options 选项\n */\nexport function value<T>(\n\tvalue: T,\n\toptions?: Options | boolean,\n): Value<T>;\nexport function value<T>(\n\tdef: T,\n\toptions?: Options | boolean,\n): Value<T> {\n\tconst proxy = options === true || options && options.proxy;\n\tlet source: T;\n\tlet proxyValue: T;\n\tconst { value } = createValue<T>(\n\t\t() => proxyValue,\n\t\t(v, mark) => {\n\t\t\tif (proxy) { v = recover(v); }\n\t\t\tif (v === source) { return; }\n\t\t\tsource = v;\n\t\t\tproxyValue = proxy ? encase(source) : source;\n\t\t\tmark();\n\t\t},\n\t);\n\tvalue(def);\n\treturn value;\n}\n\nexport interface ComputedOptions {\n\tpostpone?: boolean | 'priority';\n\tproxy?: boolean;\n}\n/**\n * 创建计算值\n * @param getter 取值方法\n * @param options 选项\n */\nexport function computed<T>(\n\tgetter: () => T,\n\toptions?: ComputedOptions | boolean,\n): Value<T>;\n/**\n * 创建可赋值计算值\n * @param getter 取值方法\n * @param setter 复制方法\n * @param options 选项\n */\nexport function computed<T>(\n\tgetter: () => T,\n\tsetter: (value: T) => void,\n\toptions?: ComputedOptions | boolean,\n): Value<T>;\nexport function computed<T>(\n\tgetter: () => T,\n\tsetter?: ((value: T) => void) | ComputedOptions | boolean,\n\toptions?: ComputedOptions | boolean,\n): Value<T>;\nexport function computed<T>(\n\tgetter: () => T,\n\tsetter?: ((value: T) => void) | ComputedOptions | boolean,\n\toptions?: ComputedOptions | boolean,\n): Value<T> {\n\tif (typeof setter !== 'function') {\n\t\toptions = setter;\n\t\tsetter = undefined;\n\t}\n\tconst setValue = setter;\n\tconst proxy = options === true || options && options.proxy;\n\tconst postpone = typeof options === 'object' && options?.postpone;\n\tlet source: T;\n\tlet proxyValue: T;\n\tlet stopped = false;\n\tlet computed = false;\n\tlet trigger: Trigger | undefined;\n\tconst executable = createExecutable(getter, changed => {\n\t\tcomputed = !changed;\n\t\tif (changed  && trigger) {\n\t\t\ttrigger();\n\t\t}\n\t}, { postpone });\n\tfunction run() {\n\t\tcomputed = true;\n\t\ttry {\n\t\t\tsource = executable();\n\t\t\tif (proxy) { source = recover(source); }\n\t\t\tproxyValue = proxy ? encase(source) : source;\n\t\t\treturn proxyValue;\n\t\t} catch(e) {\n\t\t\tif (!stopped) {\n\t\t\t\tcomputed = false;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t}\n\tlet value: Value<T>;\n\t({value, trigger} = createValue<T, Value<T>>(\n\t\t() => computed || stopped ? proxyValue : run(),\n\t\tsetValue && (v => setValue(proxy ? recover(v) : v)),\n\t\t() => {\n\t\t\tif (stopped) { return; }\n\t\t\tstopped = true;\n\t\t\tif (computed) { return; }\n\t\t\trun();\n\t\t},\n\t));\n\treturn value;\n\n}\n\nexport function merge<T, V extends Value<T> = Value<T>>(\n\tcb: WatchCallback<T, V>\n): WatchCallback<T, V> {\n\tlet oldValue: any;\n\tlet ran = false;\n\treturn (v, stopped) => {\n\t\tif (stopped) { return cb(v, stopped); }\n\t\tconst newValue = recover(v());\n\t\tif (newValue === oldValue && ran) { return; }\n\t\tran = true;\n\t\toldValue = newValue;\n\t\tcb(v, stopped);\n\t};\n}\n\ntype OffValue<V> = V extends Value<infer T> ? T : V;\n\nexport function mix<T extends object>(\n\tsource: T\n): { [K in keyof T]: OffValue<T[K]>; } {\n\tfor (const k of Reflect.ownKeys(source)) {\n\t\tconst descriptor = Reflect.getOwnPropertyDescriptor(source, k);\n\t\tif (!descriptor) { continue; }\n\t\tif (\n\t\t\t!('value' in descriptor)\n\t\t\t|| 'get' in descriptor\n\t\t\t|| 'set' in descriptor\n\t\t) { continue; }\n\t\tconst value = descriptor.value;\n\t\tif (!isValue(value)) { continue; }\n\t\tdescriptor.get = () => value.value;\n\t\tif (descriptor.writable) {\n\t\t\tdescriptor.set = v => (value as Value<any>).value = v;\n\t\t}\n\t\tdelete descriptor.value;\n\t\tdelete descriptor.writable;\n\t\tReflect.defineProperty(source, k, descriptor);\n\t}\n\treturn source as any;\n}\n","import { safeify } from './utils';\nimport { observe, watchProp, ReadMap } from './state';\nimport { recover } from './encase';\n\nexport interface ExecResult<T> {\n\tresult: T;\n\tstop(): void;\n}\nexport interface ExecOptions {\n\tresultOnly?: boolean;\n\tpostpone?: boolean | 'priority';\n}\n/**\n * 创建可监听执行函数\n * @param fn 要监听执行的函数\n * @param cb 当监听的值发生可能改变时触发的回调函数，单如果没有被执行的函数或抛出错误，将会在每次 fn 被执行后直接执行\n */\nexport function exec<T>(\n\tfn: () => T,\n\tcb: (changed: boolean) => void,\n\tresultOnly?: false,\n): ExecResult<T>;\nexport function exec<T>(\n\tfn: () => T,\n\tcb: (changed: boolean) => void,\n\tresultOnly: true,\n): T;\nexport function exec<T>(\n\tfn: () => T,\n\tcb: (changed: boolean) => void,\n\toptions?: ExecOptions & {resultOnly?: false},\n): ExecResult<T>;\nexport function exec<T>(\n\tfn: () => T,\n\tcb: (changed: boolean) => void,\n\toptions: ExecOptions & {resultOnly: true},\n): T;\nexport function exec<T>(\n\tfn: () => T,\n\tcb: (changed: boolean) => void,\n\toptions?: boolean | ExecOptions,\n): ExecResult<T> | T;\nexport function exec<T>(\n\tfn: () => T,\n\tcb: (changed: boolean) => void,\n\toptions?: boolean | ExecOptions,\n): ExecResult<T> | T {\n\tcb = safeify(cb);\n\tlet cancelList: (() => void)[] | undefined;\n\tconst resultOnly = options === true\n\t\t|| typeof options === 'object' && options?.resultOnly;\n\tconst postpone = typeof options === 'object' && options?.postpone;\n\t/** 取消监听 */\n\tfunction cancel() {\n\t\tif (!cancelList) { return false; }\n\t\tconst list = cancelList;\n\t\tcancelList = undefined;\n\t\tlist.forEach(f => f());\n\t\treturn true;\n\t}\n\tfunction trigger() {\n\t\tif (!cancel()) { return; }\n\t\tcb(true);\n\t};\n\tconst thisRead: ReadMap = new Map();\n\tconst result = observe(fn, thisRead, { postpone });\n\tif (!thisRead.size) {\n\t\tcb(false);\n\t\tif (resultOnly) { return result; }\n\t\treturn { result, stop() {} };\n\t}\n\tcancelList = [];\n\tfor ( let [obj, props] of thisRead) {\n\t\tfor (const p of props) {\n\t\t\tcancelList.push(watchProp(recover(obj), p, trigger));\n\t\t}\n\t}\n\tif (resultOnly) { return result; }\n\treturn {\n\t\tresult,\n\t\tstop() {\n\t\t\tif (!cancel()) { return; }\n\t\t\tcb(false);\n\t\t}\n\t}\n}\n"],"names":["printErrorLog","read","printError","info","print","undefined","console","error","safeify","fn","p","e","getIndexes","target","prop","String","getMapValue","map","key","def","has","get","value","set","markRead","indexes","Set","add","observe","options","oldRead","postpone","watchList","WeakMap","execWatch","watch","_watchList$get","forEach","w","waitList","getValue","f","priority","list","Map","old","entries","run","markChange","wait","watchProp","cb","removed","delete","size","encashable","v","Boolean","includes","encase","nest","original","recover","nestLayer","Infinity","proxy","Proxy","receiver","Reflect","modified","setPrototypeOf","proto","oldProto","getPrototypeOf","defineProperty","attr","changed","desc","getOwnPropertyDescriptor","deleteProperty","deleted","ownKeys","__monitorable__recover__","createExecutable","cancelList","cancel","trigger","exec","thisRead","clear","obj","props","push","stop","values","WeakSet","isValue","x","createValue","setValue","change","marked","length","callbacks","cancelled","index","findIndex","a","splice","enumerable","configurable","_callbacks","stopped","getter","setter","_options","source","proxyValue","computed","executable","b","resultOnly","result","oldValue","ran","newValue","k","descriptor","writable","mark"],"mappings":"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"}