{"version":3,"file":"monitorable.esm.min.js","sources":["../src/utils.ts","../src/mark.ts","../src/encase.ts","../src/exec.ts","../src/monitor.ts","../src/value.ts","../src/valueify.ts","../src/asValue.ts"],"sourcesContent":["\nlet printErrorLog: undefined | ((info: any) => void);\n/** 打印错误 */\nexport function printError(info: any) {\n\tif (typeof printErrorLog === 'function') {\n\t\tprintErrorLog(info);\n\t\treturn;\n\t}\n\tconsole.error(info);\n}\n\nexport function setPrintError(p?: (info: any) => void) {\n\tprintErrorLog = typeof p === 'function' ? p : undefined;\n}\n\n/**\n * 判断对象是否可被代理\n */\nexport function encashable(v: any): v is object | Function {\n\treturn Boolean(v && ['object', 'function'].includes(typeof v));\n}\n\n\n/** 回调函数安全化处理 */\nexport function safeify<T extends any[]>(\n\tfn: (...p: T) => void\n): (...p: T) => void {\n\treturn (...p) => {\n\t\ttry {\n\t\t\tfn(...p);\n\t\t} catch(e) {\n\t\t\tprintError(e);\n\t\t}\n\t};\n}\nexport function getIndexes(\n\ttarget: any,\n\tprop: string | number | symbol | boolean,\n): [object | Function, string | boolean | symbol] | undefined {\n\tif (!target) { return undefined; }\n\tif (typeof target !== 'function' && typeof target !== 'object') {\n\t\treturn undefined;\n\t}\n\tif (typeof prop === 'number') { return [target, String(prop)]; }\n\tif (typeof prop === 'symbol') { return [target, prop]; }\n\tif (typeof prop === 'string') { return [target, prop]; }\n\tif (typeof prop === 'boolean') { return [target, prop]; }\n\treturn undefined;\n}\nexport function getMapValue<K, V>(\n\tmap: Map<K, V>,\n\tkey: K,\n\tdef: () => V,\n): V;\nexport function getMapValue<K extends object, V>(\n\tmap: WeakMap<K, V>,\n\tkey: K,\n\tdef: () => V,\n): V;\nexport function getMapValue<K, V>(\n\tmap: WeakMap<K & object, V> | Map<K, V>,\n\tkey: K,\n\tdef: () => V,\n): V {\n\tif (map.has(key as any)) {\n\t\treturn map.get(key as any)!;\n\t}\n\tconst value = def();\n\tmap.set(key as any, value);\n\treturn value;\n}\n","import { safeify, getMapValue, getIndexes } from './utils';\n\nexport type ReadMap = Map<\n\tobject | Function,\n\tMap<string | boolean | symbol, boolean>\n>;\n\n/** 已被读取的 */\nlet read: ReadMap | undefined;\n\n/**\n * 标记已读状态\n * @param obj  要标记的对象\n * @param prop 要标记的属性\n */\nexport function markRead(\n\ttarget: object | Function,\n\tprop: string | number | boolean | symbol,\n) {\n\tif (!read) { return; }\n\tconst indexes = getIndexes(target, prop);\n\tif (!indexes) { return; }\n\t[target, prop] = indexes;\n\tconst propMap = getMapValue(read, target, () => new Map());\n\tif (propMap.has(prop)) { return; }\n\tpropMap.set(prop, false);\n}\nexport interface ObserveOptions {\n\tpostpone?: boolean | 'priority';\n}\n/**\n * 监听函数的执行，并将执行过程中读取的对象值设置到 map 中\n * @param fn 要执行的含糊\n * @param map 用于存储被读取对象的 map\n */\nexport function observeRun<T>(\n\tmap: ReadMap,\n\tfn: () => T,\n\toptions?: ObserveOptions,\n): T {\n\tconst oldRead = read;\n\tread = map;\n\ttry {\n\t\tif (!options?.postpone) { return fn(); }\n\t\treturn postpone(fn, options.postpone === 'priority');\n\t} finally {\n\t\tread = oldRead;\n\t}\n}\nexport function observe<T>(\n\tmap: ReadMap,\n\tfn: () => T,\n\tpriority?: ObserveOptions,\n): T;\nexport function observe<T>(\n\tmap: ReadMap,\n\tpriority: ObserveOptions,\n\tf: () => T,\n): T;\nexport function observe<T>(\n\tmap: ReadMap,\n\tfn: (() => T) | ObserveOptions | undefined,\n\toptions?: (() => T) | ObserveOptions | undefined\n): T;\nexport function observe<T>(\n\tmap: ReadMap,\n\tfn: (() => T) | ObserveOptions | undefined,\n\toptions?: (() => T) | ObserveOptions | undefined\n): T {\n\n\tif (typeof fn === 'function') {\n\t\treturn observeRun(map, fn, options as ObserveOptions | undefined);\n\t}\n\tif (typeof options !== 'function') {\n\t\tthrow new Error('fn needs to be a function');\n\t}\n\treturn observeRun(map, options, fn);\n}\n\n\nconst watchList = new WeakMap<\n\tobject | Function,\n\tMap<string | boolean | symbol, Set<() => void>>\n>();\n\nfunction execWatch(\n\ttarget: object | Function,\n\tprop: string | boolean | symbol,\n) {\n\tconst watch = watchList.get(target)?.get(prop);\n\tif (!watch) { return; }\n\t[...watch].forEach(w => w());\n}\n\ntype MarkMap = Map<\n\tobject | Function,\n\tSet<string | boolean | symbol>\n>;\nlet waitList: MarkMap | undefined;\n\nfunction run(list: MarkMap) {\n\tfor (const [target, set] of list.entries()) {\n\t\tconst propMap = read?.get(target);\n\t\tfor (const prop of set) {\n\t\t\texecWatch(target, prop);\n\t\t\tif (propMap?.has(prop)) {\n\t\t\t\tpropMap.set(prop, true);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nfunction postponeRun<T>(f: () => T, priority?: boolean): T {\n\tconst list = !priority && waitList || new Map();\n\tconst old = waitList;\n\twaitList = list;\n\ttry {\n\t\treturn f();\n\t} finally {\n\t\twaitList = old;\n\t\tif (list !== waitList) { run(list); }\n\t}\n}\nexport function postpone<T>(priority: boolean, f: () => T): T;\nexport function postpone<T>(fn: () => T, priority?: boolean): T;\nexport function postpone<T>(\n\tfn: (() => T) | boolean | undefined,\n\tpriority?: (() => T) | boolean | undefined\n): T;\nexport function postpone<T>(\n\tfn: (() => T) | boolean | undefined,\n\tpriority?: (() => T) | boolean | undefined\n): T {\n\tif (typeof fn === 'function') {\n\t\treturn postponeRun(fn, priority as boolean | undefined);\n\t}\n\tif (typeof priority !== 'function') {\n\t\tthrow new Error('fn needs to be a function');\n\t}\n\treturn postponeRun(priority, fn);\n}\n\n\nfunction wait(\n\ttarget: object | Function,\n\tprop: string | boolean | symbol,\n) {\n\tif (!waitList) { return false; }\n\tgetMapValue(waitList, target, () => new Set()).add(prop);\n\treturn true;\n}\n\n/**\n * 标记属性的修改，同时触发监听函数\n * @param target 要标记的对象\n * @param prop   要标记的属性 特别的，false 表示原型，true 表示成员\n */\nexport function markChange(\n\ttarget: object | Function,\n\tprop: string | number | boolean | symbol,\n) {\n\n\tconst indexes = getIndexes(target, prop);\n\tif (!indexes) { return; }\n\t[target, prop] = indexes;\n\tif (wait(target, prop)) { return; }\n\texecWatch(target, prop);\n}\n\n/**\n * 观察对象属性的变化\n * @param target 要观察的对象\n * @param prop   要观察的属性名 特别的，false 表示原型，true 表示成员\n * @param fn     属性改变后触发的函数\n */\nexport function watchProp(\n\ttarget: object | Function,\n\tprop: string | number | boolean | symbol,\n\tcb: () => void,\n): () => void {\n\tif (typeof cb !== 'function') { return  () => {}; }\n\tconst indexes = getIndexes(target, prop);\n\tif (!indexes) { return () => {}; }\n\t[target, prop] = indexes;\n\n\tconst key = prop;\n\tlet map = watchList.get(target);\n\tif (!map) {\n\t\tmap = new Map();\n\t\twatchList.set(target, map);\n\t}\n\tconst list = getMapValue(map, key, () => new Set());\n\tcb = safeify(cb);\n\tlist.add(cb);\n\tlet removed = false;\n\treturn () => {\n\t\tif (removed) { return; }\n\t\tremoved = true;\n\n\t\t// 从当前列表中移除\n\t\tlist.delete(cb);\n\n\t\t// 从属性关联中删除\n\t\tif (list.size) { return; }\n\t\tif (!map) { return; }\n\t\tmap.delete(key);\n\n\t\t// 映射列表中删除\n\t\tif (map.size) { return; }\n\t\twatchList.delete(target);\n\t};\n\n}\n","import { markChange, markRead } from './mark';\n\n/**\n * 判断对象是否可被代理\n */\nfunction encashable(v: any): v is object | Function {\n\treturn Boolean(v && ['object', 'function'].includes(typeof v));\n}\n\nlet getValue: any;\n/**\n * 获取被代理对象\n * @param obj  要被代理的对象\n * @param nest 递归代理的层数\n */\nexport function encase<T>(value: T, nest: number | boolean = 0): T {\n\tif (!encashable(value)) { return value; }\n\tconst original = recover(value);\n\tconst nestLayer: number = nest === true ? Infinity : nest || 0;\n\tconst proxy = new Proxy(original, {\n\t\tset(target, prop, value, receiver) {\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.set(target, prop, value, receiver);\n\t\t\t}\n\t\t\tconst has = Reflect.has(target, prop);\n\t\t\tconst modified =\n\t\t\t\tReflect.set(target, prop, value, encase(receiver));\n\t\t\tif (!modified) { return modified; }\n\t\t\tif (has !== Reflect.has(target, prop)) {\n\t\t\t\tmarkChange(target, true);\n\t\t\t}\n\t\t\treturn modified;\n\t\t},\n\t\tget(target, prop, receiver) {\n\t\t\tif (getValue === proxy) {\n\t\t\t\tif (prop === '__monitorable__recover__') {\n\t\t\t\t\tgetValue = original;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t\t}\n\t\t\tmarkRead(target, prop);\n\t\t\tconst value = Reflect.get(target, prop, encase(receiver));\n\t\t\tif (nestLayer > 0) { return encase(value, nestLayer - 1); }\n\t\t\treturn value;\n\t\t},\n\t\tsetPrototypeOf(target, proto) {\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.setPrototypeOf(target, proto);\n\t\t\t}\n\t\t\tconst oldProto = Reflect.getPrototypeOf(target);\n\t\t\tconst modified = Reflect.setPrototypeOf(target, proto);\n\t\t\tif (modified && oldProto !== proto) {\n\t\t\t\tmarkChange(target, false);\n\t\t\t}\n\t\t\treturn modified;\n\t\t},\n\t\tgetPrototypeOf(target) {\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.getPrototypeOf(target);\n\t\t\t}\n\t\t\tmarkRead(target, false);\n\t\t\tconst value: any = Reflect.getPrototypeOf(target);\n\t\t\tif (nestLayer > 0) {\n\t\t\t\treturn encase(value, nestLayer - 1);\n\t\t\t}\n\t\t\treturn value;\n\t\t},\n\t\tdefineProperty(target, prop, attr) {\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.defineProperty(target, prop, attr);\n\t\t\t}\n\t\t\tlet changed = true;\n\t\t\tif ('value' in attr) {\n\t\t\t\tconst desc =\n\t\t\t\t\tReflect.getOwnPropertyDescriptor(target, prop);\n\t\t\t\tif (\n\t\t\t\t\tdesc && 'value' in desc\n\t\t\t\t\t&& recover(attr.value) === recover(desc.value)) {\n\t\t\t\t\tchanged = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst modified = Reflect.defineProperty(target, prop, attr);\n\t\t\tif (changed && modified) {\n\t\t\t\tmarkChange(target, prop);\n\t\t\t}\n\t\t\treturn modified;\n\t\t},\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.getOwnPropertyDescriptor(target, prop);\n\t\t\t}\n\t\t\tmarkRead(target, prop);\n\t\t\treturn Reflect.getOwnPropertyDescriptor(target, prop);\n\t\t},\n\t\tdeleteProperty(target, prop) {\n\t\t\tif (nest === false) {\n\t\t\t\treturn Reflect.deleteProperty(target, prop);\n\t\t\t}\n\t\t\tconst has = Reflect.has(target, prop);\n\t\t\tconst deleted = Reflect.deleteProperty(target, prop);\n\t\t\tif (has && !Reflect.has(target, prop)) {\n\t\t\t\tmarkChange(target, prop);\n\t\t\t\tmarkChange(target, true);\n\t\t\t}\n\t\t\treturn deleted;\n\t\t},\n\t\townKeys(target) {\n\t\t\tif (nest === false) { return Reflect.ownKeys(target); }\n\t\t\tmarkRead(target, true);\n\t\t\treturn Reflect.ownKeys(target);\n\t\t},\n\t\thas(target, prop) {\n\t\t\tif (nest === false) { return Reflect.has(target, prop); }\n\t\t\tmarkRead(target, true);\n\t\t\treturn Reflect.has(target, prop);\n\t\t},\n\t});\n\treturn proxy;\n}\n/** 获取被代理的原始值 */\nexport function recover<T>(v: T): T {\n\tif (!v) { return v; }\n\tif (!encashable(v)) { return v; }\n\tlet value = v;\n\ttry {\n\t\tgetValue = v;\n\t\tvalue = (v as any).__monitorable__recover__;\n\t} catch {}\n\tvalue = getValue;\n\tgetValue = false;\n\tif (!value) { return v; }\n\tif (typeof value === 'object') { return value; }\n\tif (typeof value === 'function') { return value; }\n\treturn v;\n}\nexport function equal(a: any, b: any): boolean {\n\treturn recover(a) === recover(b);\n}\n","import { safeify } from './utils';\nimport { observe, watchProp, ReadMap, ObserveOptions } from './mark';\nimport { recover } from './encase';\n\nexport interface ExecResult<T> {\n\tresult: T;\n\tstop(): void;\n}\nexport interface ExecOptions extends ObserveOptions {\n\tresultOnly?: boolean;\n}\nfunction run<T>(\n\tcb: (changed: boolean) => void,\n\tfn: (stop: () => void) => T,\n\toptions?: ExecOptions,\n): ExecResult<T> | T {\n\tcb = safeify(cb);\n\tlet cancelList: (() => void)[] | undefined;\n\tconst postpone = options?.postpone;\n\tlet end = false;\n\t/** 取消监听 */\n\tfunction cancel() {\n\t\tif (end) { return false; }\n\t\tend = true;\n\t\tif (!cancelList) { return true; }\n\t\tconst list = cancelList;\n\t\tcancelList = undefined;\n\t\tlist.forEach(f => f());\n\t\treturn true;\n\t}\n\tfunction trigger() {\n\t\tif (!cancel()) { return; }\n\t\tcb(true);\n\t};\n\tfunction run(thisRead: ReadMap) {\n\t\tif (end) { return false; }\n\t\tif (!thisRead.size) {\n\t\t\tend = true;\n\t\t\treturn cb(false);\n\t\t}\n\t\tconst list: [\n\t\t\tobject | Function,\n\t\t\tstring | boolean | symbol,\n\t\t][] = [];\n\t\tfor ( let [obj, props] of thisRead) {\n\t\t\tfor (const [p, m] of props) {\n\t\t\t\tif (m) { return cb(true); }\n\t\t\t\tlist.push([obj, p]);\n\t\t\t}\n\t\t}\n\t\tcancelList = list.map(\n\t\t\t([obj, p]) => watchProp(recover(obj), p, trigger),\n\t\t);\n\t}\n\tfunction stop() {\n\t\tif (!cancel()) { return; }\n\t\tcb(false);\n\t};\n\tconst thisRead: ReadMap = new Map();\n\tconst result = observe(thisRead, () => fn(stop), { postpone });\n\trun(thisRead);\n\tif (options?.resultOnly) { return result; }\n\treturn { result, stop };\n}\n\n/**\n * 创建可监听执行函数\n * @param fn 要监听执行的函数\n * @param cb 当监听的值发生可能改变时触发的回调函数，单如果没有被执行的函数或抛出错误，将会在每次 fn 被执行后直接执行\n */\nexport function exec<T>(\n\tcb: (changed: boolean) => void,\n\tfn: (stop: () => void) => T,\n\toptions?: ExecOptions & {resultOnly?: false},\n): ExecResult<T>;\nexport function exec<T>(\n\tcb: (changed: boolean) => void,\n\toptions: ExecOptions & {resultOnly?: false} | undefined,\n\tfn?: (stop: () => void) => T,\n): ExecResult<T>;\n\nexport function exec<T>(\n\tcb: (changed: boolean) => void,\n\tfn: (stop: () => void) => T,\n\toptions: ExecOptions & {resultOnly: true},\n): T;\nexport function exec<T>(\n\tcb: (changed: boolean) => void,\n\toptions: ExecOptions & {resultOnly: true},\n\tfn: (stop: () => void) => T,\n): T;\n\nexport function exec<T>(\n\tcb: (changed: boolean) => void,\n\tfn: (stop: () => void) => T,\n\toptions?: ExecOptions,\n): ExecResult<T> | T;\nexport function exec<T>(\n\tcb: (changed: boolean) => void,\n\toptions: ExecOptions | undefined,\n\tfn: (stop: () => void) => T,\n): ExecResult<T> | T;\n\nexport function exec<T>(\n\tcb: (changed: boolean) => void,\n\tfn: ((stop: () => void) => T) | ExecOptions | undefined,\n\toptions?: ((stop: () => void) => T) | ExecOptions | undefined,\n): ExecResult<T> | T  {\n\tif (typeof cb !== 'function') {\n\t\tthrow new Error('cb needs to be a function');\n\t}\n\tif (typeof fn === 'function') {\n\t\treturn run(cb, fn, options as ExecOptions | undefined);\n\t}\n\tif (typeof options !== 'function') {\n\t\tthrow new Error('fn needs to be a function');\n\t}\n\treturn run(cb, options, fn);\n}\n","import { safeify } from './utils';\nimport { observe, watchProp, ReadMap, ObserveOptions } from './mark';\nimport { recover } from './encase';\n\nexport interface Monitored<T, P extends any[] = []> {\n\t(...p: P): T;\n\tstop(): void;\n}\nexport interface MonitorOptions extends ObserveOptions {}\n/**\n * 创建可监听执行函数\n * @param fn 要监听执行的函数\n * @param cb 当监听的值发生可能改变时触发的回调函数，单如果没有被执行的函数或抛出错误，将会在每次 fn 被执行后直接执行\n */\nfunction create<T, P extends any[] = []>(\n\tcb: (changed: boolean) => void,\n\tfn: (...p: P) => T,\n\toptions?: MonitorOptions,\n): Monitored<T, P> {\n\tcb = safeify(cb);\n\tlet cancelList: (() => void)[] | undefined;\n\t/** 取消监听 */\n\tfunction cancel() {\n\t\tif (!cancelList) { return false; }\n\t\tconst list = cancelList;\n\t\tcancelList = undefined;\n\t\tlist.forEach(f => f());\n\t\treturn true;\n\t}\n\tfunction trigger() {\n\t\tif (!cancel()) { return; }\n\t\tcb(true);\n\t};\n\tfunction run(thisRead: ReadMap) {\n\t\tif (!thisRead.size) {\n\t\t\treturn cb(false);\n\t\t}\n\t\tconst list: [\n\t\t\tobject | Function,\n\t\t\tstring | boolean | symbol,\n\t\t][] = [];\n\t\tfor ( let [obj, props] of thisRead) {\n\t\t\tfor (const [p, m] of props) {\n\t\t\t\tif (m) { return cb(true); }\n\t\t\t\tlist.push([obj, p]);\n\t\t\t}\n\t\t}\n\t\tcancelList = list.map(\n\t\t\t([obj, p]) => watchProp(recover(obj), p, trigger),\n\t\t);\n\t}\n\tfunction exec(...p: P) {\n\t\tcancel();\n\t\tconst thisRead: ReadMap = new Map();\n\t\tconst result = observe(thisRead, () => fn(...p), options);\n\t\trun(thisRead);\n\t\treturn result;\n\t}\n\texec.stop = () => {\n\t\tif (!cancel()) { return; }\n\t\tcb(false);\n\t};\n\treturn exec;\n}\n\n/**\n * 创建可监听执行函数\n * @param fn 要监听执行的函数\n * @param cb 当监听的值发生可能改变时触发的回调函数，单如果没有被执行的函数或抛出错误，将会在每次 fn 被执行后直接执行\n */\nexport function monitor<T, P extends any[] = []>(\n\tcb: (changed: boolean) => void,\n\tfn: (...p: P) => T,\n\toptions?: MonitorOptions,\n): Monitored<T, P>\nexport function monitor<T, P extends any[] = []>(\n\tcb: (changed: boolean) => void,\n\toptions: MonitorOptions | undefined,\n\tfn: (...p: P) => T,\n): Monitored<T, P>;\nexport function monitor<T, P extends any[] = []>(\n\tcb: (changed: boolean) => void,\n\tfn: ((...p: P) => T) | MonitorOptions | undefined,\n\toptions?: ((...p: P) => T) | MonitorOptions,\n): Monitored<T, P>;\nexport function monitor<T, P extends any[] = []>(\n\tcb: (changed: boolean) => void,\n\tfn: ((...p: P) => T) | MonitorOptions | undefined,\n\toptions?: ((...p: P) => T) | MonitorOptions,\n): Monitored<T, P> {\n\tif (typeof fn === 'function') {\n\t\treturn create(cb, fn, options as MonitorOptions | undefined);\n\t}\n\tif (typeof options !== 'function') {\n\t\tthrow new Error('fn needs to be a function');\n\t}\n\treturn create(cb, options, fn);\n}\n","import { safeify } from './utils';\nimport { markRead, markChange } from './mark';\nimport { recover, encase } from './encase';\nimport { monitor } from './monitor';\n\n/** 取消监听的方法 */\nexport interface CancelWatch {\n\t(): void;\n}\n/** 可监听值 */\nexport interface Value<T> {\n\t(): T;\n\t(v: T, mark?: boolean): T;\n\tvalue: T;\n\twatch(cb: WatchCallback<T, this>): CancelWatch;\n\tstop(): void;\n\ttoString(...p: T extends {toString(...p: infer P): string} ? P : any): string;\n\tvalueOf(): T extends {valueOf(): infer R} ? R : T;\n}\nexport type DeValue<T> = T extends Value<infer V> ? V : T;\nexport type EnValue<T> = Value<DeValue<T>>;\n/** 监听函数 */\nexport interface WatchCallback<T, V extends Value<T> = Value<T>> {\n\t(v: V, stopped: boolean): void;\n}\nconst values = new WeakSet<Value<any>>();\nexport function isValue(x: any): x is Value<any> {\n\treturn values.has(x);\n}\n/** 触发监听 */\ninterface Trigger {\n\t(): void;\n\t/** 是否存在监听函数 */\n\thas(): boolean;\n\t/** 停止监听 */\n\tstop(): void;\n}\nexport interface Options {\n\tproxy?: boolean;\n}\n\n\nfunction valueOf<T>(this: Value<T>) {\n\tconst value = this();\n\tif (value === undefined) { return value; }\n\tif (value === null) { return value; }\n\treturn (value as any).valueOf();\n}\nfunction toString<T>(this: Value<T>, ...p: any) {\n\tconst value = this();\n\tif (value === undefined) { return String(value); }\n\tif (value === null) { return String(value); }\n\tif (typeof (value as any).toString === 'function') {\n\t\treturn (value as any).toString(...p);\n\t}\n\treturn String(value);\n}\nfunction toPrimitive<T>(this: Value<T>, hint?: 'string' | 'number' | 'default') {\n\tconst value = this();\n\tif (value === undefined) { return String(value); }\n\tif (value === null) { return String(value); }\n\tif (typeof (value as any)[Symbol.toPrimitive] === 'function') {\n\t\treturn (value as any)[Symbol.toPrimitive](hint);\n\t}\n\tif (hint === 'string') {\n\t\treturn String(value);\n\t}\n\tif (hint === 'number') {\n\t\treturn Number(value);\n\t}\n\treturn value;\n}\n\nfunction createValue<T, V extends Value<T> = Value<T>>(\n\trecover: () => T,\n\tsetValue?: (value: T, markChange: () => void) => void,\n\tstop: () => void = () => {},\n\tchange: () => void = () => {},\n): {value: V, trigger: Trigger} {\n\tfunction set(v: T, marked = false) {\n\t\tif (!setValue) { return; }\n\t\ttry {\n\t\t\tsetValue(v, () => { marked = true; });\n\t\t} finally {\n\t\t\tif (marked) {\n\t\t\t\ttrigger();\n\t\t\t}\n\t\t}\n\t}\n\tfunction get() {\n\t\tmarkRead(value, 'value');\n\t\treturn recover();\n\t}\n\tconst value: V = ((...v: [T] | [T, boolean] | []): T => {\n\t\tif (v.length) {\n\t\t\tset(v[0], v[1]);\n\t\t\treturn v[0];\n\t\t}\n\t\treturn get();\n\t}) as V;\n\tReflect.defineProperty(value, 'value', {\n\t\tget,\n\t\tset,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n\tReflect.defineProperty(value, 'valueOf', {\n\t\tvalue: valueOf,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n\tReflect.defineProperty(value, 'toString', {\n\t\tvalue: toString,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n\n\tReflect.defineProperty(value, Symbol.toPrimitive, {\n\t\tvalue: toPrimitive,\n\t\tenumerable: true,\n\t\tconfigurable: true,\n\t});\n\n\tfunction watch(cb: WatchCallback<T, V>): () => void {\n\t\tif (!callbacks) { return () => {}; }\n\t\tcb = safeify(cb);\n\t\tcallbacks.push(cb);\n\t\tchange();\n\t\tlet cancelled = false;\n\t\treturn () => {\n\t\t\tif (cancelled) { return; }\n\t\t\tcancelled = true;\n\t\t\tif (!callbacks) { return; }\n\t\t\tconst index = callbacks.findIndex(a => a === cb);\n\t\t\tif (index < 0) { return; }\n\t\t\tcallbacks.splice(index, 1);\n\t\t\tchange();\n\t\t};\n\t}\n\tlet callbacks: WatchCallback<T, V>[] | undefined = [];\n\tReflect.defineProperty(value, 'watch', {\n\t\tget() { return watch; },\n\t\tset() {},\n\t\tconfigurable: true,\n\t});\n\tconst trigger = (() => {\n\t\tif (!callbacks) { return; }\n\t\tmarkChange(value, 'value');\n\t\tfor (const cb of [...callbacks]) {\n\t\t\tcb(value, false);\n\t\t}\n\t}) as Trigger;\n\ttrigger.has = () => Boolean(callbacks?.length);\n\ttrigger.stop = () => {\n\t\tif (!callbacks) { return; }\n\t\tconst list = callbacks;\n\t\tcallbacks = undefined;\n\t\tfor (const cb of [...list]) {\n\t\t\tcb(value, true);\n\t\t}\n\t};\n\tvalues.add(value);\n\tlet stopped = false;\n\tvalue.stop = () => {\n\t\tif (stopped) { return; }\n\t\tstopped = true;\n\t\tstop();\n\t\ttrigger.stop();\n\n\t};\n\treturn {value, trigger};\n}\n/**\n * 创建引用值\n * @param value 初始值\n * @param options 选项\n */\nexport function value<T>(\n\tvalue: T,\n\toptions?: Options | boolean,\n): Value<T>;\nexport function value<T>(\n\tdef: T,\n\toptions?: Options | boolean,\n): Value<T> {\n\tconst proxy = options === true || options && options.proxy;\n\tlet source: T;\n\tlet proxyValue: T;\n\tconst { value } = createValue<T>(\n\t\t() => proxyValue,\n\t\t(v, mark) => {\n\t\t\tif (proxy) { v = recover(v); }\n\t\t\tif (v === source) { return; }\n\t\t\tsource = v;\n\t\t\tproxyValue = proxy ? encase(source) : source;\n\t\t\tmark();\n\t\t},\n\t);\n\tvalue(def);\n\treturn value;\n}\n\nexport interface ComputedOptions {\n\tpostpone?: boolean | 'priority';\n\tproxy?: boolean;\n}\n/**\n * 创建计算值\n * @param getter 取值方法\n * @param options 选项\n */\nexport function computed<T>(\n\tgetter: () => T,\n\toptions?: ComputedOptions | boolean,\n): Value<T>;\n/**\n * 创建可赋值计算值\n * @param getter 取值方法\n * @param setter 复制方法\n * @param options 选项\n */\nexport function computed<T>(\n\tgetter: () => T,\n\tsetter: (value: T) => void,\n\toptions?: ComputedOptions | boolean,\n): Value<T>;\nexport function computed<T>(\n\tgetter: () => T,\n\tsetter?: ((value: T) => void) | ComputedOptions | boolean,\n\toptions?: ComputedOptions | boolean,\n): Value<T>;\nexport function computed<T>(\n\tgetter: () => T,\n\tsetter?: ((value: T) => void) | ComputedOptions | boolean,\n\toptions?: ComputedOptions | boolean,\n): Value<T> {\n\tif (typeof setter !== 'function') {\n\t\toptions = setter;\n\t\tsetter = undefined;\n\t}\n\tconst setValue = setter;\n\tconst proxy = options === true || options && options.proxy;\n\tconst postpone = typeof options === 'object' && options?.postpone;\n\tlet source: T;\n\tlet proxyValue: T;\n\tlet stopped = false;\n\tlet computed = false;\n\tlet trigger: Trigger | undefined;\n\tconst executable = monitor(changed => {\n\t\tcomputed = !changed;\n\t\tif (changed  && trigger) {\n\t\t\ttrigger();\n\t\t}\n\t}, getter, { postpone });\n\tfunction run() {\n\t\tcomputed = true;\n\t\ttry {\n\t\t\tsource = executable();\n\t\t\tif (proxy) { source = recover(source); }\n\t\t\tproxyValue = proxy ? encase(source) : source;\n\t\t\treturn proxyValue;\n\t\t} catch(e) {\n\t\t\tif (!stopped) {\n\t\t\t\tcomputed = false;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t}\n\tlet value: Value<T>;\n\t({value, trigger} = createValue<T, Value<T>>(\n\t\t() => computed || stopped ? proxyValue : run(),\n\t\tsetValue && (v => setValue(proxy ? recover(v) : v)),\n\t\t() => {\n\t\t\tif (stopped) { return; }\n\t\t\tstopped = true;\n\t\t\tif (computed) { return; }\n\t\t\trun();\n\t\t},\n\t));\n\treturn value;\n\n}\n\nexport function merge<T, V extends Value<T> = Value<T>>(\n\tcb: WatchCallback<T, V>\n): WatchCallback<T, V> {\n\tlet oldValue: any;\n\tlet ran = false;\n\treturn (v, stopped) => {\n\t\tif (stopped) { return cb(v, stopped); }\n\t\tconst newValue = recover(v());\n\t\tif (newValue === oldValue && ran) { return; }\n\t\tran = true;\n\t\toldValue = newValue;\n\t\tcb(v, stopped);\n\t};\n}\n\ntype OffValue<V> = V extends Value<infer T> ? T : V;\n\nexport function mix<T extends object>(\n\tsource: T\n): { [K in keyof T]: OffValue<T[K]>; } {\n\tfor (const k of Reflect.ownKeys(source)) {\n\t\tconst descriptor = Reflect.getOwnPropertyDescriptor(source, k);\n\t\tif (!descriptor) { continue; }\n\t\tif (\n\t\t\t!('value' in descriptor)\n\t\t\t|| 'get' in descriptor\n\t\t\t|| 'set' in descriptor\n\t\t) { continue; }\n\t\tconst value = descriptor.value;\n\t\tif (!isValue(value)) { continue; }\n\t\tdescriptor.get = () => value.value;\n\t\tif (descriptor.writable) {\n\t\t\tdescriptor.set = v => (value as Value<any>).value = v;\n\t\t}\n\t\tdelete descriptor.value;\n\t\tdelete descriptor.writable;\n\t\tReflect.defineProperty(source, k, descriptor);\n\t}\n\treturn source as any;\n}\n","\nimport { DeValue, Value, value, computed, isValue } from './value';\nexport interface Valueify<T> {\n\t<K extends keyof T>(\n\t\tkey: K,\n\t\tdef?: Value<DeValue<T[K]> | undefined>,\n\t\tset?: (value: DeValue<T[K]>, setted: boolean) => void\n\t): Value<DeValue<T[K]> | undefined>\n}\n\nfunction createValue<T, K extends keyof T>(\n\tprops: T,\n\tkey: K,\n\tdef: Value<DeValue<T[K]> | undefined> = value(undefined),\n\tset?: (value: DeValue<T[K]>, setted: boolean) => void,\n): Value<DeValue<T[K]> | undefined> {\n\tfunction setValue(value: DeValue<T[K]>, setted: boolean): void {\n\t\tif (!set) { return; }\n\t\tset(value, setted);\n\t}\n\treturn computed(() => {\n\t\tif (!(key in props)) { return def(); }\n\t\tconst p = props[key];\n\t\treturn isValue(p) ? p() : p;\n\t}, v => {\n\t\tif (!(key in props)) {\n\t\t\tdef(v);\n\t\t\tsetValue(v, false);\n\t\t\treturn;\n\t\t}\n\t\tconst p = props[key];\n\t\tif (isValue(p)) {\n\t\t\tp(v);\n\t\t\tsetValue(v, true);\n\t\t\treturn;\n\t\t}\n\t\tsetValue(v, false);\n\t});\n}\nexport function valueify<T>(props: T): Valueify<T>;\nexport function valueify<T, K extends keyof T>(\n\tprops: T,\n\tkey: K,\n\tdef?: Value<DeValue<T[K]> | undefined>,\n\tset?: (value: DeValue<T[K]>, setted: boolean) => void,\n): Value<DeValue<T[K]> | undefined>;\nexport function valueify<T, K extends keyof T>(\n\tprops: T,\n\tkey?: K,\n\tdef?: Value<DeValue<T[K]> | undefined>,\n\tset?: (value: DeValue<T[K]>, setted: boolean) => void\n): Valueify<T> | Value<DeValue<T[K]> | undefined> {\n\tif (arguments.length >= 2) {\n\t\treturn createValue(props, key!, def, set);\n\t}\n\treturn (k, d, s) => createValue(props, k, d, s);\n}\n","\nimport { computed, isValue, EnValue } from './value';\nexport interface AsValue<T> {\n\t<K extends keyof T>(key: K): EnValue<T[K]>\n}\n\nfunction createValue<T, K extends keyof T>(\n\tprops: T,\n\tkey: K,\n): EnValue<T[K]> {\n\treturn computed(() => {\n\t\tconst p = props[key];\n\t\treturn isValue(p) ? p() : p;\n\t}, v => {\n\t\tconst p = props[key];\n\t\tif (isValue(p)) {\n\t\t\tp(v);\n\t\t} else {\n\t\t\tprops[key] = v;\n\t\t}\n\t});\n}\nexport function asValue<T>(props: T): AsValue<T>;\nexport function asValue<T, K extends keyof T>(\n\tprops: T,\n\tkey: K,\n): EnValue<T[K]>;\nexport function asValue<T, K extends keyof T>(\n\tprops: T,\n\tkey?: K,\n): AsValue<T> | EnValue<T[K]> {\n\tif (arguments.length >= 2) {\n\t\treturn createValue(props, key!);\n\t}\n\treturn k => createValue(props, k);\n}\n"],"names":["printErrorLog","read","printError","info","console","error","setPrintError","p","undefined","encashable","v","Boolean","includes","safeify","fn","e","getIndexes","target","prop","String","getMapValue","map","key","def","has","get","value","set","markRead","indexes","propMap","Map","observeRun","options","oldRead","postpone","observe","Error","watchList","WeakMap","execWatch","watch","_watchList$get","forEach","w","waitList","getValue","postponeRun","f","priority","list","old","entries","_read","run","markChange","Set","add","wait","watchProp","cb","removed","delete","size","encase","nest","original","recover","nestLayer","Infinity","proxy","Proxy","receiver","Reflect","modified","setPrototypeOf","proto","oldProto","getPrototypeOf","defineProperty","attr","changed","desc","getOwnPropertyDescriptor","deleteProperty","deleted","ownKeys","__monitorable__recover__","equal","a","b","cancelList","end","cancel","trigger","stop","thisRead","result","obj","props","m","push","resultOnly","exec","create","monitor","values","WeakSet","isValue","x","valueOf","this","toString","toPrimitive","hint","Symbol","Number","createValue","setValue","change","marked","length","callbacks","cancelled","index","findIndex","splice","enumerable","configurable","_callbacks","stopped","source","proxyValue","mark","computed","getter","setter","_options","executable","merge","oldValue","ran","newValue","mix","k","descriptor","writable","setted","valueify","arguments","d","s","asValue"],"mappings":"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"}